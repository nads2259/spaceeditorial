services:
  db:
    image: mysql:8.0
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${DB_DATABASE:-spaceeditorial}
      MYSQL_USER: ${DB_USERNAME:-spaceeditor}
      MYSQL_PASSWORD: ${DB_PASSWORD:-spaceeditor}
    ports:
      - "${DB_FORWARD_PORT:-3306}:3306"
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: ["redis-server", "--save", "", "--appendonly", "no"]
    ports:
      - "${REDIS_FORWARD_PORT:-6379}:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend-app:
    build:
      context: ./backend
      target: php
    restart: unless-stopped
    environment:
      APP_ENV: ${APP_ENV:-local}
      APP_DEBUG: ${APP_DEBUG:-true}
      APP_URL: ${APP_URL:-http://localhost:8080}
      APP_SITE_URL: ${APP_SITE_URL:-http://localhost:3000}
      APP_KEY: ${APP_KEY:-}
      LOG_CHANNEL: ${LOG_CHANNEL:-stack}
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-spaceeditorial}
      DB_USERNAME: ${DB_USERNAME:-spaceeditor}
      DB_PASSWORD: ${DB_PASSWORD:-spaceeditor}
      CACHE_STORE: ${CACHE_STORE:-database}
      SESSION_DRIVER: ${SESSION_DRIVER:-database}
      QUEUE_CONNECTION: ${QUEUE_CONNECTION:-database}
      BROADCAST_CONNECTION: log
      MAIL_MAILER: log
      REDIS_CLIENT: phpredis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      FRONTEND_ORIGINS: ${FRONTEND_ORIGINS:-http://localhost:3000}
      SANCTUM_STATEFUL_DOMAINS: ${SANCTUM_STATEFUL_DOMAINS:-localhost:3000}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - backend-storage:/var/www/html/storage
    healthcheck:
      test: ["CMD", "php", "-r", "exit(function_exists(\"opcache_reset\") ? 0 : 1);"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  backend-web:
    build:
      context: ./backend
      target: nginx
    restart: unless-stopped
    depends_on:
      backend-app:
        condition: service_healthy
    ports:
      - "${BACKEND_HTTP_PORT:-8080}:80"
    volumes:
      - backend-storage:/var/www/html/storage

  backend-queue:
    build:
      context: ./backend
      target: php
    restart: unless-stopped
    command: php artisan queue:work --verbose --tries=3 --timeout=90
    depends_on:
      backend-app:
        condition: service_healthy
    environment:
      APP_ENV: ${APP_ENV:-local}
      APP_DEBUG: ${APP_DEBUG:-true}
      APP_URL: ${APP_URL:-http://localhost:8080}
      APP_SITE_URL: ${APP_SITE_URL:-http://localhost:3000}
      APP_KEY: ${APP_KEY:-}
      LOG_CHANNEL: ${LOG_CHANNEL:-stack}
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-spaceeditorial}
      DB_USERNAME: ${DB_USERNAME:-spaceeditor}
      DB_PASSWORD: ${DB_PASSWORD:-spaceeditor}
      CACHE_STORE: ${CACHE_STORE:-database}
      SESSION_DRIVER: ${SESSION_DRIVER:-database}
      QUEUE_CONNECTION: ${QUEUE_CONNECTION:-database}
      BROADCAST_CONNECTION: log
      MAIL_MAILER: log
      REDIS_CLIENT: phpredis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      FRONTEND_ORIGINS: ${FRONTEND_ORIGINS:-http://localhost:3000}
      SANCTUM_STATEFUL_DOMAINS: ${SANCTUM_STATEFUL_DOMAINS:-localhost:3000}
    volumes:
      - backend-storage:/var/www/html/storage

  backend-scheduler:
    build:
      context: ./backend
      target: php
    restart: unless-stopped
    command: >-
      sh -c "while true; do php artisan schedule:run --verbose --no-interaction; sleep 60; done"
    depends_on:
      backend-app:
        condition: service_healthy
    environment:
      APP_ENV: ${APP_ENV:-local}
      APP_DEBUG: ${APP_DEBUG:-true}
      APP_URL: ${APP_URL:-http://localhost:8080}
      APP_SITE_URL: ${APP_SITE_URL:-http://localhost:3000}
      APP_KEY: ${APP_KEY:-}
      LOG_CHANNEL: ${LOG_CHANNEL:-stack}
      DB_CONNECTION: mysql
      DB_HOST: db
      DB_PORT: 3306
      DB_DATABASE: ${DB_DATABASE:-spaceeditorial}
      DB_USERNAME: ${DB_USERNAME:-spaceeditor}
      DB_PASSWORD: ${DB_PASSWORD:-spaceeditor}
      CACHE_STORE: ${CACHE_STORE:-database}
      SESSION_DRIVER: ${SESSION_DRIVER:-database}
      QUEUE_CONNECTION: ${QUEUE_CONNECTION:-database}
      BROADCAST_CONNECTION: log
      MAIL_MAILER: log
      REDIS_CLIENT: phpredis
      REDIS_HOST: redis
      REDIS_PORT: 6379
      FRONTEND_ORIGINS: ${FRONTEND_ORIGINS:-http://localhost:3000}
      SANCTUM_STATEFUL_DOMAINS: ${SANCTUM_STATEFUL_DOMAINS:-localhost:3000}
    volumes:
      - backend-storage:/var/www/html/storage

  frontend-app:
    build:
      context: ./frontend
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:8080}
        VITE_API_TOKEN: ${VITE_API_TOKEN:-}
        VITE_TRACKING_BASE_URL: ${VITE_TRACKING_BASE_URL:-http://localhost:8080}
        VITE_SITE_BASE_URL: ${VITE_SITE_BASE_URL:-http://localhost:3000}
    restart: unless-stopped
    depends_on:
      backend-web:
        condition: service_started
    ports:
      - "${FRONTEND_HTTP_PORT:-3000}:80"

volumes:
  db-data:
  redis-data:
  backend-storage:
